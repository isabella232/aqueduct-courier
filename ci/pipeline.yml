resource_types:
  - name: gcs-resource
    type: docker-image
    source:
      repository: frodenas/gcs-resource

resources:
- name: aqueduct-courier
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/aqueduct-courier
    private_key: {{courier-git-deploy-private-key}}
- name: staging-binaries
  type: gcs-resource
  source:
    bucket: {{courier-staging-builds-bucket}}
    json_key: {{courier-gcp-service-account-key}}
    regexp: aqueduct-cli-(.*).tgz
- name: production-package-receipt
  type: gcs-resource
  source:
    bucket: {{courier-production-builds-bucket}}
    json_key: {{courier-gcp-service-account-key}}
    versioned_file: docker-image-package-receipt
- name: aqueduct-staging-docker-image
  type: docker-image
  source:
    repository: platforminsightsteam/aqueduct-staging
    username: {{dockerhub_username}}
    password: {{dockerhub_password}}
- name: version
  type: semver
  source:
    driver: git
    uri: git@github.com:pivotal-cf/aqueduct-courier
    branch: version
    file: VERSION
    private_key: {{courier-git-deploy-private-key}}

jobs:
- name: courier-tests
  plan:
  - get: aqueduct-courier
    trigger: true
  - task: run-tests
    file: aqueduct-courier/ci/tasks/courier-tests.yml

- name: windows-courier-tests
  plan:
  - get: aqueduct-courier
    trigger: true
  - task: run-tests
    file: aqueduct-courier/ci/tasks/courier-tests-windows.yml

- name: build-staging-binaries
  plan:
  - get: aqueduct-courier
    passed: [courier-tests, windows-courier-tests]
    trigger: true
  - get: version
    params: {pre: build}
  - task: build-binaries
    file: aqueduct-courier/ci/tasks/build-binaries.yml
    params:
      DATA_LOADER_URL: {{staging-data-loader-url}}
  - put: staging-binaries
    params:
      file: aqueduct-binaries/aqueduct-cli-*.tgz
  - put: aqueduct-staging-docker-image
    params:
      build: artifacts-for-docker-image
      tag: version/version
      tag_as_latest: true
  - task: generate-package-receipt
    file: aqueduct-courier/ci/tasks/generate-package-receipt.yml
  - put: production-package-receipt
    params:
      file: package-receipt/docker-image-package-receipt
  - put: version
    params: {file: version/version}

- name: test-collect-and-send
  plan:
  - get: aqueduct-courier
    passed: [build-staging-binaries]
    trigger: true
  - task: collect-with-user-creds
    file: aqueduct-courier/ci/tasks/collect.yml
    params:
      OPS_MANAGER_URL: {{courier-ops-manager-url}}
      OPS_MANAGER_USERNAME: {{courier-ops-manager-username}}
      OPS_MANAGER_PASSWORD: {{courier-ops-manager-password}}
      ENV_TYPE: development
  - task: collect-with-client-creds
    output_mapping:
      collected-data: collected-data-with-client-creds
    file: aqueduct-courier/ci/tasks/collect.yml
    params:
      OPS_MANAGER_URL: {{courier-ops-manager-url}}
      OPS_MANAGER_CLIENT_ID: {{courier-ops-manager-client-id}}
      OPS_MANAGER_CLIENT_SECRET: {{courier-ops-manager-client-secret}}
      ENV_TYPE: development
  - task: send
    file: aqueduct-courier/ci/tasks/send.yml
    params:
      API_KEY: {{loader-api-key}}
